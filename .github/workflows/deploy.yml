name: Deploy

# This workflow demonstrates how to deploy to different environments
# using GitHub Environments with their protection rules
on:
  workflow_run:
    workflows: ["Run Tests"]
    types:
      - completed
    branches: [development, staging, main]

jobs:
  deploy:
    # Only run if tests passed
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    # Set environment based on branch - this activates the environment's protection rules
    environment: ${{ github.event.workflow_run.head_branch == 'main' && 'production' || github.event.workflow_run.head_branch == 'staging' && 'staging' || 'development' }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0'
      
      - name: Show deployment info
        run: |
          echo "Deploying from branch: ${{ github.event.workflow_run.head_branch }}"
          echo "Deploying to environment: ${{ github.event.workflow_run.head_branch == 'main' && 'production' || github.event.workflow_run.head_branch == 'staging' && 'staging' || 'development' }}"
      
      # Create a publishable version of the application
      - name: Publish application
        run: dotnet publish -c Release -o ./publish
      
      # MOCK DEPLOYMENT - In a real scenario, this would deploy to actual infrastructure
      # This demonstrates environment-specific configuration access
      - name: Deploy application
        run: |
          echo "Deploying to ${{ github.event.workflow_run.head_branch == 'main' && 'production' || github.event.workflow_run.head_branch == 'staging' && 'staging' || 'development' }} environment"
          
          # Access environment-specific secrets based on the target environment
          # Each environment has its own protected secrets
          echo "Using environment config: ${{ secrets[format('{0}_CONFIGURATION', github.event.workflow_run.head_branch == 'main' && 'PROD' || github.event.workflow_run.head_branch == 'staging' && 'STAGING' || 'DEV')] }}"
          echo "Deployment successful!"
      
      # Create a deployment report artifact for tracking purposes
      - name: Create deployment report
        run: |
          mkdir -p deployment-report
          echo "Deployment Report" > deployment-report/report.txt
          echo "Branch: ${{ github.event.workflow_run.head_branch }}" >> deployment-report/report.txt
          echo "Environment: ${{ github.event.workflow_run.head_branch == 'main' && 'production' || github.event.workflow_run.head_branch == 'staging' && 'staging' || 'development' }}" >> deployment-report/report.txt
          echo "Date: $(date)" >> deployment-report/report.txt
          echo "Status: Success" >> deployment-report/report.txt
      
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: deployment-report
          path: deployment-report
          retention-days: 5
