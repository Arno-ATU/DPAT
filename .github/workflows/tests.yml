name: Run Tests

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed
    branches: [ development, staging, main ]

permissions:
  contents: read
  checks: write

jobs:
  test:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            src/DataPrivacyAuditTool.Tests.Unit
          sparse-checkout-cone-mode: false
      
      - name: Download build artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });
            
            const matchArtifact = artifacts.data.artifacts.find(artifact => artifact.name === "build-artifacts");
            if (!matchArtifact) {
              core.setFailed('No build artifacts found');
              return;
            }
            
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip'
            });
            
            const fs = require('fs');
            fs.writeFileSync('build-artifacts.zip', Buffer.from(download.data));
            
            const AdmZip = require('adm-zip');
            const zip = new AdmZip('build-artifacts.zip');
            zip.extractAllTo('.');
      
      - name: Run unit tests with artifacts
        run: dotnet test ./src/DataPrivacyAuditTool.Tests.Unit/DataPrivacyAuditTool.Tests.Unit.csproj --no-build --logger "trx;LogFileName=test-results.trx" --collect:"XPlat Code Coverage"
      
      - name: Generate test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: .NET Test Results
          path: "**/TestResults/test-results.trx"
          reporter: dotnet-trx
          fail-on-error: true
      
      - name: Generate code coverage report
        uses: danielpalme/ReportGenerator-GitHub-Action@5.1.19
        if: success() || failure()
        with:
          reports: "**/coverage.cobertura.xml"
          targetdir: "coveragereport"
          reporttypes: "HtmlInline;Cobertura"
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: coverage-report
          path: coveragereport
          retention-days: 5
