name: Code Quality

on:
  pull_request:
    branches: [development, staging, main]
  push:
    branches: [development]
    paths:
      - '**/*.cs'
      - '**/*.cshtml'
      - '**/*.csproj'

jobs:
  format:
    name: Format Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0'
      
      - name: Install dotnet-format
        run: dotnet tool install --global dotnet-format
      
      - name: Format code
        run: dotnet format --verbosity diagnostic
      
      - name: Commit formatting changes
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/development' }}
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Apply automatic code formatting"
          file_pattern: "**/*.cs"
  
  build_and_test:
    name: Build and Test
    needs: format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0'
      
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --no-restore
      
      - name: Run tests (excluding BDD tests)
        run: |
          dotnet test --no-restore --verbosity normal --filter "FullyQualifiedName!~DataPrivacyAuditTool.Tests.BDD"
  
  sonar:
    name: SonarCloud Analysis
    needs: build_and_test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/development' }}
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0'
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
      
      - name: Install dotnet-coverage
        run: dotnet tool install --global dotnet-coverage
      
      - name: Begin SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"your-project-key" \
            /o:"your-organization" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.dotcover.reportsPaths=coverage.xml \
            /d:sonar.tests=src/DataPrivacyAuditTool.Tests.Unit \
            /d:sonar.exclusions=**/DataPrivacyAuditTool.Tests.BDD/**/* \
            /d:sonar.cpd.cs.minimumLines=6 \
            /d:sonar.cpd.cs.minimumTokens=50 \
            /d:sonar.qualitygate.wait=true
      
      - name: Build project
        run: dotnet build --no-incremental
      
      - name: Run tests (excluding BDD tests)
        run: |
          dotnet-coverage collect 'dotnet test --filter "FullyQualifiedName!~DataPrivacyAuditTool.Tests.BDD"' -f xml -o 'coverage.xml'
      
      - name: End SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
  
  code_duplication:
    name: Code Duplication Analysis
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install jscpd
        run: npm install -g jscpd

      - name: Run Code Duplication Check
        run: jscpd --min-lines 6 --min-tokens 50 --threshold 5 --reporters "html,console" --ignore "**/bin/**,**/obj/**,**/DataPrivacyAuditTool.Tests.BDD/**" --output ./jscpd-report .
        
      - name: Upload duplication report
        uses: actions/upload-artifact@v4
        with:
          name: duplication-report
          path: ./jscpd-report
